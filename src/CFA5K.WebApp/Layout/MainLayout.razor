@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inherits LayoutComponentBase
<div class="page">
    <div class="not-for-print sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="not-for-print top-row px-4">
            @* <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a> *@
            <AuthorizeView>
                <Authorized>
                    <div class="dropdown">
                        <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                            @GetUserId(context)
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <li><a class="dropdown-item" href=@(Pages.WhoAmI.DefaultRoute)>Who Am I?</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href=@(Pages.SignOut.DefaultRoute)>Sign Out</a></li>
                        </ul>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href=@(Pages.SignIn.DefaultRoute)>
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Sign In
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article id="body-container" class="root-for-print content px-4">
            @Body
        </article>
    </main>
</div>

@code
{
    string GetUserId(AuthenticationState state)
    {
        var user = state.User;
        var userId = user.Identity;

        if (userId == null)
        {
            return "???";
        }

        var email = user.Claims.FirstOrDefault(x => ClaimTypes.Email == x.Type);
        var name = userId.Name ?? email?.Value;
        var type = user.Claims.FirstOrDefault(x => ClaimTypes.System == x.Type)?.Value
            ?? userId.AuthenticationType;

        return $"{name} ({type})";
    }
}
